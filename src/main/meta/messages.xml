<?xml version="1.0" encoding="UTF-8"?>
<MessageCollection xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="messagecollection.xsd">

	<Plugin>
		<ShortDescription>Syncron Findbugs Extensions</ShortDescription>
		<Details>
			<![CDATA[<p>This plugin contains FindBugs detectors from the Syncron Findbugs Extensions project</p>]]>
		</Details>
	</Plugin>

	<Detector class="com.syncron.bpp.findbugsextensions.PrintStackTraceDetector">
		<Details>Finds usage of Throwable.printStackTrace.</Details>
	</Detector>

	<Detector class="com.syncron.bpp.findbugsextensions.FinalOverrideDetector">
		<Details>Finds classes and methods which override classes and methods with Final annotation</Details>
	</Detector>

	<Detector class="com.syncron.bpp.findbugsextensions.StaticDateCalendarDetector">
		<Details>Finds usage of static Calendar or SimpleDateFormat</Details>
	</Detector>

	<Detector class="com.syncron.bpp.findbugsextensions.ThrowableToStringDetector">
		<Details>Finds overriding of Throwable.toString</Details>
	</Detector>

	<Detector class="com.syncron.bpp.findbugsextensions.SetStackTraceDetector">
		<Details>Finds usage of Throwable.setStackTrace</Details>
	</Detector>

	<Detector class="com.syncron.bpp.findbugsextensions.PackagePrivateDetector">
		<Details>Finds usage of @PackagePrivate</Details>
	</Detector>

	<Detector class="com.syncron.bpp.findbugsextensions.CheckStateCheckArgumentDetector">
		<Details>Finds usage of Preconditions.checkState and Preconditions.checkArgument with single boolean argument</Details>
	</Detector>

	<Detector class="com.syncron.bpp.findbugsextensions.NonStaticLoggerDetector">
		<Details>Finds non static usage of org.slf4j.Logger</Details>
	</Detector>

	<BugPattern type="SYNC_PRINT_STACKTRACE">
		<ShortDescription>Throwable.printStackTrace</ShortDescription>
		<LongDescription>Throwable.printStackTrace in {1}</LongDescription>
		<Details>
			<![CDATA[
				<p>Usage of Throwable.printStackTrace is forbidden. Please consider sending the Throwable to log.</p>
			]]>
		</Details>
	</BugPattern>
	<BugCode abbrev="PST">printStackTrace</BugCode>

	<BugPattern type="SYNC_FINAL_OVERRIDDEN">
		<ShortDescription>Class or method with @Final was extended
		</ShortDescription>
		<LongDescription>Class or method with @Final was extended {0}
		</LongDescription>
		<Details>
			<![CDATA[
				<p>Extending classes or overriding methods annotated @Final is forbidden. These classes and methods
				should be treated as if they were declared with <strong>final</strong> keyword.</p>
			]]>
		</Details>
	</BugPattern>
	<BugCode abbrev="AF">Final</BugCode>

	<BugPattern type="SYNC_STATIC_CALENDAR_INSTANCE">
		<ShortDescription>java.util.Calendar</ShortDescription>
		<LongDescription>static java.util.Calendar in {1}</LongDescription>
		<Details>
			<![CDATA[
				<p>Usage of static Calendar is forbidden. Please consider making the field non-static.</p>
			]]>
		</Details>
	</BugPattern>
	<BugCode abbrev="SSCI">StaticCalendarInstance</BugCode>

	<BugPattern type="SYNC_STATIC_SIMPLE_DATE_FORMAT_INSTANCE">
		<ShortDescription>java.text.SimpleDateFormat</ShortDescription>
		<LongDescription>static java.text.SimpleDateFormat in {1}
		</LongDescription>
		<Details>
			<![CDATA[
				<p>Usage of static SimpleDateFormat is forbidden. Please consider making the field non-static.</p>
			]]>
		</Details>
	</BugPattern>
	<BugCode abbrev="SSSDFI">StaticSimpleDateFormatInstance</BugCode>

	<BugPattern type="SYNC_THROWABLE_TOSTRING">
		<ShortDescription>Throwable.toString</ShortDescription>
		<LongDescription>Throwable.toString in {1}</LongDescription>
		<Details>
			<![CDATA[
				<p>Overriding Throwable.toString is forbidden. Please override Throwable.getMessage instead.</p>
			]]>
		</Details>
	</BugPattern>
	<BugCode abbrev="STTS">Throwable.toString</BugCode>

	<BugPattern type="SYNC_SET_STACKTRACE">
		<ShortDescription>Throwable.setStackTrace</ShortDescription>
		<LongDescription>Throwable.setStackTrace in {1}</LongDescription>
		<Details>
			<![CDATA[
				<p>Usage of Throwable.setStackTrace is forbidden. Please call Throwable.initCause instead.</p>
			]]>
		</Details>
	</BugPattern>
	<BugCode abbrev="SST">setStackTrace</BugCode>

	<BugPattern type="SYNC_PACKAGE_PRIVATE_USAGE">
		<ShortDescription>@PackagePrivate</ShortDescription>
		<LongDescription>@PackagePrivate usage in {0}</LongDescription>
		<Details>
			<![CDATA[
				<p>Usage of @PackagePrivate from outside of its package is forbidden. Methods or
				classes annotated @PackagePrivate should be treated as guarded by Java package 
				access rule.</p>
			]]>
		</Details>
	</BugPattern>
	<BugCode abbrev="SPPU">PackagePrivate</BugCode>

	<BugPattern type="SYNC_CHECK_STATE_CHECK_ARGUMENT_NO_MESSAGE">
		<ShortDescription>CheckState CheckArgument</ShortDescription>
		<LongDescription>CheckState CheckArgument in {1}</LongDescription>
		<Details>
			<![CDATA[
				<p>Usage of checkState and checkArgument with single boolean argument is forbidden.
				These methods should be used with two arguments in order to provide more meaningful
				exception messages.</p>
			]]>
		</Details>
	</BugPattern>
	<BugCode abbrev="SCSCANM">CheckState CheckArgument</BugCode>

	<BugPattern type="SYNC_NON_STATIC_LOGGER">
		<ShortDescription>Non static org.slf4j.Logger</ShortDescription>
		<LongDescription>Non static org.slf4j.Logger in {0}</LongDescription>
		<Details>
			<![CDATA[
				<p>Non static Logger fields must be initialized in constructors only.</p>
			]]>
		</Details>
	</BugPattern>
	<BugCode abbrev="SNSL">NonStaticLogger</BugCode>

</MessageCollection>
